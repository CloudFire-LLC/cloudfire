name: End to end tests
on:
  # TODO
  # push:
  #   branches:
  #     - main
  workflow_dispatch:
  pull_request:

concurrency:
  group: "e2e-${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  setup:
    runs-on: ${{ matrix.runs-on }}
    strategy:
      matrix:
        runs-on:
          - macos-14-firezone
          - windows-11-firezone
          - ubuntu-22.04-firezone
    defaults:
      run:
        working-directory: ./e2e
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v2
        with:
          version: 8
      - uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'pnpm'
          cache-dependency-path: './e2e/pnpm-lock.yaml'
      - run: pnpm i

  docker:
    needs: setup
    runs-on: ubuntu-22.04-firezone
    defaults:
      run:
        working-directory: ./e2e
    steps:
      - uses: actions/checkout@v4
      - run: |
          docker compose build
          docker compose up -d

  macos:
    needs: docker
    runs-on: macos-14-firezone
    permissions:
      contents: read
      id-token: 'write'
    defaults:
      run:
        working-directory: ./swift/apple
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-rust
        with:
          targets: aarch64-apple-darwin aarch64-apple-ios
      - uses: actions/cache/restore@v3
        name: Restore Swift DerivedData Cache
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          key: ${{ matrix.runs-on }}-${{ runner.arch }}-swift-${{ hashFiles('swift/*', 'rust/**/*.rs', 'rust/**/*.toml', 'rust/**/*.lock}') }}
          restore-keys: |
            ${{ matrix.runs-on }}-${{ runner.arch }}-swift-
      - name: build macos app
        run: |
          # Copy xcconfig
          cp Firezone/xcconfig/debug.xcconfig Firezone/xcconfig/config.xcconfig

          # Build app bundle
          xcodebuild build \
            -configuration Release \
            -scheme Firezone \
            -sdk macosx \
            -destination 'platform=macOS'
      - uses: actions/cache/save@v3
        if: ${{ github.ref == 'refs/heads/main' }}
        name: Save Swift DerivedData Cache
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          # Swift benefits heavily from build cache, so aggressively write a new one
          # on each build on `main` and attempt to restore it in PR builds with broader restore-key.
          key: ${{ matrix.runs-on }}-${{ runner.arch }}-swift-${{ hashFiles('swift/*', 'rust/**/*.rs', 'rust/**/*.toml', 'rust/**/*.lock}') }}

  windows:
    needs: docker
    runs-on: windows-11-firezone
    steps:
      - uses: actions/checkout@v4
      - run: echo 'Noop'

  linux:
    needs: docker
    runs-on: ubuntu-22.04-firezone
    steps:
      - uses: actions/checkout@v4
      - run: echo 'Noop'

  android:
    needs: docker
    runs-on: ubuntu-22.04-firezone
    steps:
      - uses: actions/checkout@v4
      - run: echo 'Noop'

  # Also used for iPadOS
  ios:
    needs: docker
    runs-on: macos-14-firezone
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-rust
        with:
          targets: aarch64-apple-darwin aarch64-apple-ios
      - uses: actions/cache/restore@v3
        name: Restore Swift DerivedData Cache
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          key: ${{ matrix.runs-on }}-${{ runner.arch }}-swift-${{ hashFiles('swift/*', 'rust/**/*.rs', 'rust/**/*.toml', 'rust/**/*.lock}') }}
          restore-keys: |
            ${{ matrix.runs-on }}-${{ runner.arch }}-swift-
      - name: build ios app
        run: |
          # Copy xcconfig
          cp Firezone/xcconfig/debug.xcconfig Firezone/xcconfig/config.xcconfig

          # Build archive
          xcodebuild archive \
            -archivePath $RUNNER_TEMP/Firezone.xcarchive \
            -configuration Release \
            -scheme Firezone \
            -sdk iphoneos \
            -destination 'platform=generic/iOS'
      - uses: actions/cache/save@v3
        if: ${{ github.ref == 'refs/heads/main' }}
        name: Save Swift DerivedData Cache
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          # Swift benefits heavily from build cache, so aggressively write a new one
          # on each build on `main` and attempt to restore it in PR builds with broader restore-key.
          key: ${{ matrix.runs-on }}-${{ runner.arch }}-swift-${{ hashFiles('swift/*', 'rust/**/*.rs', 'rust/**/*.toml', 'rust/**/*.lock}') }}

  teardown:
    needs:
      - macos
      - windows
      - linux
      - android
      - ios
    if: 'always()'
    runs-on: ubuntu-22.04-firezone
    defaults:
      run:
        working-directory: ./e2e
    steps:
      - uses: actions/checkout@v4
      - run: docker compose logs client
      - run: docker compose logs relay
      - run: docker compose logs gateway
      - run: docker compose logs api
      - run: docker compose logs web
      - run: |
          docker compose down -v
          docker system prune --force --all --volumes
