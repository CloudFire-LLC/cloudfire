name: Swift
on:
  pull_request:
    paths:
      - "swift/**"
      - "rust/connlib/**"
      - ".github/workflows/swift.yml"
  merge_group:
    types: [checks_requested]
  workflow_call:
  workflow_dispatch:

# Cancel old workflow runs if new code is pushed
concurrency:
  group: "swift-${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  swift_build:
    runs-on: ${{ matrix.runs-on.os }}
    strategy:
      fail-fast: false
      matrix:
        runs-on:
          - os: macos-13
            xcode-ver: '14.3'
        target:
          - sdk: macosx
            platform: macOS
            destination: platform=macOS
          - sdk: iphoneos
            platform: iOS
            destination: generic/platform=iOS
    permissions:
      contents: read
    defaults:
      run:
        working-directory: ./swift
    steps:
      - uses: actions/checkout@v4
      - name: Update toolchain
        run: rustup show
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: ./rust
          shared-key: ${{ runner.os }}
          # save-if: ${{ github.ref == 'refs/heads/main' }}
      - name: Update toolchain
        run: rustup show
      - uses: actions/cache/restore@v3
        name: Restore SwiftPM Cache
        with:
          path: ~/Library/Developer/Xcode/DerivedData/**/SourcePackages/checkouts
          key: ${{ matrix.target.platform }}-spm-${{ hashFiles('**/Package.resolved') }}
          restore-keys: |
            ${{ matrix.target.platform }}-spm-
      - run: |
          sudo ls -al /Applications/
      - name: Select Xcode
        run: |
          sudo xcode-select -s /Applications/Xcode_${{ matrix.runs-on.xcode-ver }}.app
      - name: Install swift-format
        run: brew install swift-format
      - name: Build app
        env:
          ONLY_ACTIVE_ARCH: no
        working-directory: ./swift/apple
        run: |
          cp Firezone/xcconfig/Developer.xcconfig.ci-${{ matrix.target.platform }} Firezone/xcconfig/Developer.xcconfig
          cp Firezone/xcconfig/Server.xcconfig.ci Firezone/xcconfig/Server.xcconfig
          xcodebuild archive -configuration Release -scheme Firezone -sdk ${{ matrix.target.sdk }} -destination '${{ matrix.target.destination }}' CODE_SIGNING_ALLOWED=NO
      - uses: actions/cache/save@v3
        # if: ${{ github.ref == 'refs/heads/main' }}
        name: Save SwiftPM Cache
        with:
          path: ~/Library/Developer/Xcode/DerivedData/**/SourcePackages/checkouts
          key: ${{ matrix.target.platform }}-spm-${{ hashFiles('**/Package.resolved') }}
