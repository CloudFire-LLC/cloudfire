name: Swift
on:
  workflow_call:

# Cancel old workflow runs if new code is pushed
concurrency:
  group: "swift-${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

jobs:
  build:
    runs-on: macos-13
    strategy:
      fail-fast: false
      matrix:
        target:
          - sdk: macosx
            platform: macOS
            destination: platform=macOS
          - sdk: iphoneos
            platform: iOS
            destination: generic/platform=iOS
    permissions:
      contents: read
    defaults:
      run:
        working-directory: ./swift/apple
    steps:
      - uses: actions/checkout@v4
      - name: Update toolchain
        run: rustup show
        working-directory: ./rust
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: ./rust
          key: ${{ matrix.target.platform }}
          # save-if: ${{ github.ref == 'refs/heads/main' }}
      - uses: actions/cache/restore@v3
        name: Restore Swift DerivedData Cache
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          key: ${{ matrix.target.platform }}-swift-${{ hashFiles('swift/**/Package.resolved', 'swift/**/*.swift') }}-${{ github.sha }}
          restore_keys: |
            ${{ matrix.target.platform }}-swift-${{ hashFiles('swift/**/Package.resolved', 'swift/**/*.swift') }}-
            ${{ matrix.target.platform }}-swift-
      - name: Build app
        env:
          ONLY_ACTIVE_ARCH: no
        run: |
          sudo xcode-select -s /Applications/Xcode_14.3.app
          brew install swift-format
          cp Firezone/xcconfig/Developer.xcconfig.ci-${{ matrix.target.platform }} Firezone/xcconfig/Developer.xcconfig
          cp Firezone/xcconfig/Server.xcconfig.ci Firezone/xcconfig/Server.xcconfig
          xcodebuild archive -configuration Release -scheme Firezone -sdk ${{ matrix.target.sdk }} -destination '${{ matrix.target.destination }}' CODE_SIGNING_ALLOWED=NO
      - uses: actions/cache/save@v3
        # if: ${{ github.ref == 'refs/heads/main' }}
        name: Save Swift DerivedData Cache
        with:
          path: ~/Library/Developer/Xcode/DerivedData
          # Swift benefits heavily from build cache, so write a new one on each build on `main`
          # and attempt to restore it in PR builds with a broader restory-key.
          key: ${{ matrix.target.platform }}-swift-${{ hashFiles('swift/**/Package.resolved', 'swift/**/*.swift') }}-${{ github.sha }}
