name: Rust
on:
  workflow_call:

# Cancel old workflow runs if new code is pushed
concurrency:
  group: "rust-${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: true

defaults:
  run:
    working-directory: ./rust

jobs:
  rust_test:
    strategy:
      fail-fast: false
      matrix:
        runs-on:
          - ubuntu-20.04
          - ubuntu-22.04
          - macos-11
          - macos-12
          - macos-13
          - windows-2019
          - windows-2022
        # TODO: https://github.com/rust-lang/cargo/issues/5220
        include:
          - runs-on:  ubuntu-20.04
            packages: -p headless -p gateway
          - runs-on: ubuntu-22.04
            packages: -p headless -p gateway
          - runs-on: macos-11
            packages: -p connlib-apple
          - runs-on: macos-12
            packages: -p connlib-apple
          - runs-on: macos-13
            packages: -p connlib-apple
          - runs-on: windows-2019
            packages: -p firezone-client-connlib
          - runs-on: windows-2022
            packages: -p firezone-client-connlib
    runs-on: ${{ matrix.runs-on }}
    steps:
      - uses: actions/checkout@v4

      # This implicitly triggers installation of the toolchain in the `rust-toolchain.toml` file.
      # If we don't do this here, our cache action will compute a cache key based on the Rust version shipped on GitHub's runner which might differ from the one we use.
      - run: rustup show

      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: ./rust
          key: v2
          prefix-key: rust-${{ matrix.runs-on }}
          save-if: ${{ github.ref == 'refs/heads/main' }}

      # TODO: Building *ring* from git requires us to install additional tools;
      # once we're not using a forked *ring* these 2 steps can be removed.
      - if: ${{ contains(matrix.runs-on, 'windows') }}
        name: Install *ring* build tools
        run: |
          git clone `
            --branch windows `
            --depth 1 `
            https://github.com/briansmith/ring-toolchain `
            target/tools/windows
      # The repo above is for a newer version of the *ring* build script which
      # expects different paths; instead of going through the trouble of
      # copying the older installation script let's just move the exe.
      - if: ${{ contains(matrix.runs-on, 'windows') }}
        name: Move *ring* build tools
        run: |
          mv target/tools/windows/nasm/nasm.exe target/tools/nasm.exe

      - run: cargo fmt -- --check
      - run: cargo doc --all-features --no-deps --document-private-items ${{ matrix.packages }}
        env:
          RUSTDOCFLAGS: "-D warnings"
      - run: cargo clippy --all-targets --all-features ${{ matrix.packages }} -- -D warnings
      - run: cargo test --all-features ${{ matrix.packages }}

  rust_smoke-test-relay:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./rust/relay
    steps:
      - uses: actions/checkout@v4

      # This implicitly triggers installation of the toolchain in the `rust-toolchain.toml` file.
      # If we don't do this here, our cache action will compute a cache key based on the Rust version shipped on GitHub's runner which might differ from the one we use.
      - run: rustup show
      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: ./rust
      - run: ./run_smoke_test.sh
