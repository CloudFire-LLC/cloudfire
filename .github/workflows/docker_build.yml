name: Docker Build
on:
  push:
    branches:
      - master
      - 'build/**'

jobs:
  draft-release:
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.release_drafter.outputs.tag_name }}
    steps:
      - uses: release-drafter/release-drafter@v5
        id: release_drafter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  docker:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    needs: draft-release
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ${{ github.repository }}
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/amd64/v2
          - linux/amd64/v3
          - linux/arm64
          - linux/riscv64
          - linux/ppc64le
          - linux/s390x
          - linux/386
          - linux/mips64le
          - linux/mips64
          - linux/arm/v7
          - linux/arm/v6
    steps:
      - uses: actions/checkout@v3
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        id: qemu
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          config-inline: |
            [worker.oci]
              platforms = ["${{ matrix.platform }}"]
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
            type=raw,${{ needs.draft-release.outputs.tag_name }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          build-args: |
            "VERSION=${{ needs.draft-release.outputs.tag_name }}"
          file: Dockerfile.prod
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
