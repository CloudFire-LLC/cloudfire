name: Continuous Delivery
on:
  # FIXME: Remove before merge
  pull_request:
  push:
    branches:
      - main

env:
  # mark:automatic-version
  VERSION: "0.20231001.0"

# Cancel old workflow runs if new code is pushed
concurrency:
  group: "cd-${{ github.workflow }}-${{ github.ref }}"
  cancel-in-progress: false

jobs:
  # FIXME: Remove before merge
  # ci:
  #   uses: ./.github/workflows/ci.yml
  #   secrets: inherit

  deploy:
    # FIXME: Remove before merge
    if: false
    runs-on: ubuntu-22.04
    # if: ${{ github.event.workflow_run.conclusion == 'success' }}
    permissions:
      contents: write
    needs:
      - ci
    env:
      TF_CLOUD_ORGANIZATION: "firezone"
      TF_API_TOKEN: "${{ secrets.TF_API_TOKEN }}"
      TF_WORKSPACE: "staging"
    steps:
      - name: Get Terraform Version
        run: |
          TERRAFORM_VERSION=$(cat .tool-versions | grep terraform | awk '{ print $NF; }')
          echo "TERRAFORM_VERSION=${TERRAFORM_VERSION}" >> $GITHUB_ENV
      - uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: ${{ env.TERRAFORM_VERSION }}
      - uses: actions/checkout@v4
        with:
          ref: ${{ github.event.workflow_run.head_branch }}
      # - name: "Push Changed Application Tags"
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     FILE_TO_COMMIT: terraform/environments/staging/versions.auto.tfvars
      #     DESTINATION_BRANCH: ${{ github.ref_name }}
      #   run: |
      #     sed -ri 's/^(\s*)(api_image_tag\s*=\s*"[^"]*"\s*$)/api_image_tag = "${{ github.sha }}"/' ./terraform/environments/staging/versions.auto.tfvars
      #     sed -ri 's/^(\s*)(web_image_tag\s*=\s*"[^"]*"\s*$)/web_image_tag = "${{ github.sha }}"/' ./terraform/environments/staging/versions.auto.tfvars
      #     cat ./terraform/environments/staging/versions.auto.tfvars

      #     export TODAY=$( date -u '+%Y-%m-%d' )
      #     export SHA=$( git rev-parse $DESTINATION_BRANCH:$FILE_TO_COMMIT )
      #     export CONTENT=$( base64 -i $FILE_TO_COMMIT )

      #     gh api \
      #       --method PUT /repos/${{ github.repository }}/contents/$FILE_TO_COMMIT \
      #       --field message="Push updated container versions [skip actions]" \
      #       --field content="$CONTENT" \
      #       --field encoding="base64" \
      #       --field branch="$DESTINATION_BRANCH" \
      #       --field sha="$SHA"
      - name: Upload Configuration
        uses: hashicorp/tfc-workflows-github/actions/upload-configuration@v1.0.4
        id: apply-upload
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          # Subdirectory is set in the project settings:
          # https://app.terraform.io/app/firezone/workspaces/staging/settings/general
          directory: "./"
      - name: Create Plan Run
        uses: hashicorp/tfc-workflows-github/actions/create-run@v1.0.4
        id: apply-run
        env:
          TF_VAR_api_image_tag: '"${{ env.VERSION }}-${{ github.sha }}"'
          TF_VAR_web_image_tag: '"${{ env.VERSION }}-${{ github.sha }}"'
          TF_VAR_relay_image_tag: '"${{ env.VERSION }}-${{ github.sha }}"'
        with:
          workspace: ${{ env.TF_WORKSPACE }}
          configuration_version:
            ${{ steps.apply-upload.outputs.configuration_version_id }}
      - name: Apply
        uses: hashicorp/tfc-workflows-github/actions/apply-run@v1.0.4
        if: fromJSON(steps.apply-run.outputs.payload).data.attributes.actions.IsConfirmable
        id: apply
        with:
          run: ${{ steps.apply-run.outputs.run_id }}
          comment: "Apply Run from GitHub Actions CI ${{ github.sha }}"
      - name: Report Status
        if: failure()
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
          SLACK_USERNAME: "GitHub Actions"
          SLACK_COLOR: "#ff0000"
          MSG_MINIMAL: "ref,actions url"
          SLACK_TITLE: "Deployment Failed"
          SLACK_MESSAGE:
            "Automatic deployment to ${{ env.TF_WORKSPACE }} failed"
        with:
          status: ${{ job.status }}
          notify_when: "failure"

  update-release-draft:
    # FIXME: Remove before merge
    # needs: deploy
    runs-on: ubuntu-22.04
    permissions:
      # write permission is required to create a github release
      contents: write
      # autolabeler
      pull-requests: write
    steps:
      - uses: release-drafter/release-drafter@v5
        id: update-release-draft
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          version: ${{ env.VERSION }}

  build-push-release-binaries:
    needs: update-release-draft
    runs-on: ubuntu-22.04
    defaults:
      run:
        working-directory: ./rust
    strategy:
      matrix:
        include:
          - package: relay
            target: x86_64-unknown-linux-musl
          - package: relay
            target: aarch64-unknown-linux-musl
          - package: firezone-gateway
            target: x86_64-unknown-linux-musl
          - package: firezone-gateway
            target: aarch64-unknown-linux-musl
    env:
      BINARY_DEST_PATH: ${{ matrix.package }}-${{ matrix.target }}
    steps:
      - uses: actions/checkout@v4
      - name: Update toolchain
        run: rustup show
      - uses: Swatinem/rust-cache@v2
        with:
          key: ubuntu-22.04-${{ runner.arch }}
          workspaces: ./rust
          save-if: false
      - name: Setup cross-rs
        run: cargo install cross --git https://github.com/cross-rs/cross
      - name: Build release binaries
        env:
          CARGO_OUTPUT_FILE: target/release/${{ matrix.package }}
        run: |
          dest="$BINARY_DEST_PATH-$VERSION"
          rustup target add ${{ matrix.target }}
          cross build --release -p ${{ matrix.package }} --target ${{ matrix.target }}
          mv $CARGO_OUTPUT_FILE $dest
          sha256sum $dest > $dest.sha256sum.txt
      - name: Push binaries
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ needs.update-release-draft.steps.update-release-draft.outputs.name }}
          draft: true
          files: |
            rust/${{ env.BINARY_DEST_PATH }}*
