# Seeds for failure cases proptest has generated in the past. It is
# automatically read and these particular cases re-run before any
# novel cases are generated.
#
# It is recommended to check this file in to source control so that
# everyone who runs the test benefits from these saved cases.
cc 313cf7ba9e733d7dfbe6463bc7880a4f70b9f32c578bc7a5ed383b7311ef9d11 # shrinks to input = _GatewayAcceptsAnyPacketWithEmptyFiltersArgs { client_id: ClientId(00000000-0000-0000-0000-000000000000), source_addr: 0.0.0.0, resource_id: ResourceId(00000000-0000-0000-0000-000000000000), resource_addr: Ipv4Network { network_address: 0.0.0.0, netmask: 32 } }
cc 3ce4b94985ec758700639382018970dee4f4e392f9c7252ad19c717f45a6c83a # shrinks to input = _GatewayAcceptsAnyPacketWithEmptyFiltersArgs { client_id: ClientId(00000000-0000-0000-0000-000000000000), resource_id: ResourceId(00000000-0000-0000-0000-000000000000), config: (::ffff:4.155.207.170, V6(Ipv6Network { network_address: ::ffff:71.37.239.192, netmask: 125 }), ::ffff:71.37.239.193), protocol_config: ([Udp(FilterInner { port_range_end: 60256, port_range_start: 33090 }), Udp(FilterInner { port_range_end: 44254, port_range_start: 14293 }), Udp(FilterInner { port_range_end: 61948, port_range_start: 52805 }), Udp(FilterInner { port_range_end: 65325, port_range_start: 64465 }), Tcp(FilterInner { port_range_end: 57329, port_range_start: 34235 }), Icmp, Tcp(FilterInner { port_range_end: 40092, port_range_start: 35624 }), Tcp(FilterInner { port_range_end: 27182, port_range_start: 7322 }), Tcp(FilterInner { port_range_end: 48142, port_range_start: 37591 }), Tcp(FilterInner { port_range_end: 50315, port_range_start: 4595 }), Udp(FilterInner { port_range_end: 57498, port_range_start: 54234 }), Udp(FilterInner { port_range_end: 49620, port_range_start: 28582 }), Icmp, Tcp(FilterInner { port_range_end: 38541, port_range_start: 15614 }), Udp(FilterInner { port_range_end: 62825, port_range_start: 12044 }), Udp(FilterInner { port_range_end: 55995, port_range_start: 17744 }), Udp(FilterInner { port_range_end: 45526, port_range_start: 10874 }), Udp(FilterInner { port_range_end: 39374, port_range_start: 37331 }), Icmp, Tcp(FilterInner { port_range_end: 25708, port_range_start: 5551 }), Tcp(FilterInner { port_range_end: 51200, port_range_start: 10313 }), Udp(FilterInner { port_range_end: 63510, port_range_start: 53385 }), Udp(FilterInner { port_range_end: 50593, port_range_start: 32817 }), Icmp, Tcp(FilterInner { port_range_end: 61310, port_range_start: 5551 }), Tcp(FilterInner { port_range_end: 47120, port_range_start: 896 }), Tcp(FilterInner { port_range_end: 64415, port_range_start: 14296 }), Tcp(FilterInner { port_range_end: 61959, port_range_start: 58894 }), Udp(FilterInner { port_range_end: 37801, port_range_start: 6915 }), Tcp(FilterInner { port_range_end: 24719, port_range_start: 9923 }), Icmp, Icmp, Icmp], Icmp), sport: 57530 }
cc b82da00af4aed8e9f5227e2447da0e1ddd0a9d09dc244a9801e8c9b2c0ff7035 # shrinks to input = _GatewayAcceptsPacketWithFiltersArgs { client_id: ClientId(00000000-0000-0000-0000-000000000000), resource_id: ResourceId(00000000-0000-0000-0000-000000000000), config: (0:c81:fcea:c4e6:faa:d6a3:bdda:fd52, V6(Ipv6Network { network_address: ::ffff:0.0.0.0, netmask: 128 }), ::ffff:0.0.0.0), protocol_config: ([Udp(FilterInner { port_range_end: 56641, port_range_start: 55120 }), Udp(FilterInner { port_range_end: 33182, port_range_start: 21129 }), Tcp(FilterInner { port_range_end: 60214, port_range_start: 47355 }), Icmp, Icmp, Icmp, Tcp(FilterInner { port_range_end: 54385, port_range_start: 42624 })], Tcp { dport: 47707 }), sport: 28649 }
