[package]
name = "connlib-shared"
# mark:automatic-version
version = "1.0.6"
edition = "2021"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html
[features]
mock = []
proptest = ["dep:proptest", "dep:itertools"]

[dependencies]
anyhow = "1.0.82"
secrecy = { workspace = true, features = ["serde", "bytes"] }
base64 = { version = "0.22", default-features = false, features = ["std"] }
boringtun = { workspace = true }
chrono = { workspace = true }
futures =  { version = "0.3", default-features = false, features = ["std", "async-await", "executor"] }
futures-util =  { version = "0.3", default-features = false, features = ["std", "async-await", "async-await-macro"] }
ip_network = { version = "0.4", default-features = false, features = ["serde"] }
os_info = { version = "3", default-features = false }
rand = { version = "0.8", default-features = false, features = ["std"] }
rand_core = { version = "0.6.4", default-features = false, features = ["std"] }
resolv-conf = "0.7.0"
serde = { version = "1.0", default-features = false, features = ["derive", "std"] }
serde_json = { version = "1.0", default-features = false, features = ["std"] }
thiserror = { version = "1.0", default-features = false }
tokio = { version = "1.36", features = ["fs"] }
tracing = { workspace = true }
url = { version = "2.4.1", default-features = false }
uuid = { version = "1.7", default-features = false, features = ["std", "v4", "serde"] }
ring = "0.17"
domain = { workspace = true }
libc = "0.2"
phoenix-channel = { workspace = true }
proptest = { version = "1.4.0", optional = true }
itertools = { version = "0.12", optional = true }

# Needed for Android logging until tracing is working
log = "0.4"

[dev-dependencies]
tempfile = "3.10.1"
itertools = "0.12"
mutants = "0.0.3" # Needed to mark functions as exempt from `cargo-mutants` testing
tokio = { version = "1.36", features = ["macros", "rt"] }

[target.'cfg(any(target_os = "macos", target_os = "ios"))'.dependencies]
swift-bridge = { workspace = true }

[target.'cfg(target_os = "android")'.dependencies]
tracing-android = "0.2"

[target.'cfg(any(target_os = "linux", target_os = "windows"))'.dependencies]
# Needed to safely backup `/etc/resolv.conf` and write the device ID on behalf of `gui-client`
atomicwrites = "0.4.3"

[target.'cfg(target_os = "linux")'.dependencies]
rtnetlink = { workspace = true }

# Windows tunnel dependencies
[target.'cfg(target_os = "windows")'.dependencies]
wintun = "0.4.0"
known-folders = "1.1.0"

# Windows Win32 API
[target.'cfg(windows)'.dependencies.windows]
version = "0.56.0"
features = [
  "Win32_Foundation",
]

[lints]
workspace = true
