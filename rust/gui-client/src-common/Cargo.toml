[package]
name = "firezone-gui-client-common"
# mark:next-gui-version
version = "1.3.1"
edition = "2021"

[dependencies]
anyhow = { version = "1.0" }
atomicwrites = "0.4.3"
connlib-shared = { workspace = true }
crash-handler = "0.6.2"
firezone-bin-shared = { workspace = true }
firezone-headless-client = { path = "../../headless-client" }
firezone-logging = { workspace = true }
hex = "0.4.3"
minidumper = "0.8.3"
output_vt100 = "0.1"
rand = "0.8.5"
reqwest = { version = "0.12.5", default-features = false, features = ["stream", "rustls-tls"] }
secrecy = { workspace = true }
semver = { version = "1.0.22", features = ["serde"] }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
subtle = "2.5.0"
time = { version = "0.3.36", features = ["formatting"] }
thiserror = { version = "1.0", default-features = false }
tokio = { workspace = true }
tracing = { workspace = true }
tracing-log = "0.2"
tracing-subscriber = { version = "0.3.17", features = ["env-filter"] }
url = { version = "2.5.2" }
zip = { version = "2", features = ["deflate", "time"], default-features = false }

[dependencies.keyring]
version = "3.2.1"
features = [
    "crypto-rust", # Don't rely on OpenSSL
    "sync-secret-service", # Can't use Tokio because of <https://github.com/hwchen/keyring-rs/issues/132>
    "windows-native", # Yes, really, we must actually explicitly ask for every platform. Otherwise it defaults to an in-memory mock store. Really. That's really how `keyring` 3.x is designed.
]

[target.'cfg(target_os = "windows")'.dependencies]
winreg = "0.52.0"

[lints]
workspace = true
