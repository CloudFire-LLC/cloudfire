[package]
name = "firezone-gui-client"
# mark:automatic-version
version = "1.0.0"
description = "Firezone"
edition = "2021"
default-run = "firezone-gui-client"
authors = ["Firezone, Inc."]

[build-dependencies]
anyhow = { version = "1.0" }
tauri-build = { version = "1.5", features = [] }

[dependencies]
arboard = { version = "3.3.2", default-features = false }
anyhow = { version = "1.0" }
arc-swap = "1.7.0"
chrono = { workspace = true }
clap = { version = "4.5", features = ["derive",  "env"] }
connlib-client-shared = { workspace = true }
connlib-shared = { workspace = true }
crash-handler = "0.6.1"
firezone-client-tunnel = { path = "../../client-tunnel" }
git-version = "0.3.9"
hex = "0.4.3"
# Same crate Hickory uses
hostname = "0.3.1"
keyring = "2.3.2"
minidumper = "0.8.2"
native-dialog = "0.7.0"
output_vt100 = "0.1"
rand = "0.8.5"
reqwest = { version = "0.12.2", default-features = false, features = ["stream", "rustls-tls"] }
ring = "0.17"
sadness-generator = "0.5.0"
secrecy = { workspace = true }
serde = { version = "1.0", features = ["derive"] }
serde_json = "1.0"
semver = { version = "1.0.22", features = ["serde"] }
subtle = "2.5.0"
tauri = { version = "1.6", features = [ "dialog", "shell-open-api", "system-tray" ] }
tauri-runtime = "0.14.2"
tauri-utils = "1.5.3"
thiserror = { version = "1.0", default-features = false }
tokio = { version = "1.36.0", features = ["signal", "time", "macros", "rt", "rt-multi-thread"] }
tracing = { workspace = true }
tracing-log = "0.2"
tracing-panic = "0.1.1"
tracing-subscriber = { version = "0.3.17", features = ["env-filter"] }
url = { version = "2.5.0", features = ["serde"] }
uuid = { version = "1.7.0", features = ["v4"] }
zip = { version = "0.6.6", features = ["deflate", "time"], default-features = false }

[target.'cfg(target_os = "linux")'.dependencies]
dirs = "5.0.1"
# Used for infinite `pending` on not-yet-implemented functions
futures = "0.3.30"

[target.'cfg(target_os = "macos")'.dependencies]
dirs = "5.0.1"
# Used for infinite `pending` on not-implemented functions
futures = "0.3.30"

[target.'cfg(target_os = "windows")'.dependencies]
futures = { version = "0.3", default-features = false }
tauri-winrt-notification = "0.2.0"
windows-implement = "0.53.0"
winreg = "0.52.0"
wintun = "0.4.0"
ipconfig = "0.3.2"

[target.'cfg(target_os = "windows")'.dependencies.windows]
version = "0.54.0"
features = [
  # For implementing COM interfaces
  "implement",
  "Win32_Foundation",
  # For listening for network change events
  "Win32_Networking_NetworkListManager",
  # For deep_link module
  "Win32_Security",
  # COM is needed to listen for network change events
  "Win32_System_Com",
  # Needed for Windows to automatically kill child processes if the main process crashes
  "Win32_System_JobObjects",
  # Needed to check process ID of named pipe clients
  "Win32_System_Pipes",
  # Needed to listen for system DNS changes
  "Win32_System_Registry",
  "Win32_System_Threading",
  # For deep_link module
  "Win32_System_SystemServices",
]

[features]
# this feature is used for production builds or when `devPath` points to the filesystem
# DO NOT REMOVE!!
# TODO: We can probably remove this, per <https://github.com/tauri-apps/tauri/releases/tag/tauri-v2.0.0-beta.8>
# I don't know how to verify this change, so I won't do it right now.
custom-protocol = ["tauri/custom-protocol"]

[lints]
workspace = true
