version: "3.8"

services:
  dialer:
    build:
      target: debug
      context: ..
      args:
        PACKAGE: firezone-connection-tests
      cache_from:
        - type=registry,ref=us-east1-docker.pkg.dev/firezone-staging/cache/connection-tests:main
    image: us-east1-docker.pkg.dev/firezone-staging/firezone/connection-tests:${VERSION:-main}
    init: true
    environment:
      ROLE: "dialer"
      REDIS_HOST: redis # All services share the `app` network.
    cap_add:
      - NET_ADMIN
    # depends_on:
    #   relay:
    #     condition: "service_healthy"
    #   redis:
    #     condition: "service_healthy"
    networks:
      - app

  listener:
    build:
      target: debug
      context: ..
      args:
        PACKAGE: firezone-connection-tests
      cache_from:
        - type=registry,ref=us-east1-docker.pkg.dev/firezone-staging/cache/connection-tests:main
    image: us-east1-docker.pkg.dev/firezone-staging/firezone/connection-tests:${VERSION:-main}
    init: true
    environment:
      ROLE: "listener"
      REDIS_HOST: redis # All services share the `app` network.
    cap_add:
      - NET_ADMIN
    # depends_on:
    #   relay:
    #     condition: "service_healthy"
    #   redis:
    #     condition: "service_healthy"
    networks:
      - app

  redis:
    image: "redis:7-alpine"
    # healthcheck:
    #   test: ["CMD-SHELL", "echo 'ready';"]
    networks:
      - app

networks:
  app:
    enable_ipv6: true
