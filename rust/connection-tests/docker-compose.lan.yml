version: "3.8"
name: lan-integration-test

services:
  dialer:
    build:
      target: debug
      context: ..
      args:
        PACKAGE: firezone-connection-tests
      cache_from:
        - type=registry,ref=us-east1-docker.pkg.dev/firezone-staging/cache/connection-tests:main
    image: us-east1-docker.pkg.dev/firezone-staging/firezone/connection-tests:${VERSION:-main}
    init: true
    environment:
      ROLE: "dialer"
    cap_add:
      - NET_ADMIN
    entrypoint: /bin/sh
    command:
      - -c
      - |
        set -ex

        export REDIS_HOST=$$(curl --fail --silent --unix-socket /var/run/docker.sock http://localhost/containers/lan-integration-test-redis-1/json | jq -r '.NetworkSettings.Networks."lan-integration-test_app".IPAddress')

        firezone-connection-tests
    depends_on:
      - redis
    networks:
      - app
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  listener:
    build:
      target: debug
      context: ..
      args:
        PACKAGE: firezone-connection-tests
      cache_from:
        - type=registry,ref=us-east1-docker.pkg.dev/firezone-staging/cache/connection-tests:main
    image: us-east1-docker.pkg.dev/firezone-staging/firezone/connection-tests:${VERSION:-main}
    init: true
    environment:
      ROLE: "listener"
    cap_add:
      - NET_ADMIN
    entrypoint: /bin/sh
    command:
      - -c
      - |
        set -ex

        export REDIS_HOST=$$(curl --fail --silent --unix-socket /var/run/docker.sock http://localhost/containers/lan-integration-test-redis-1/json | jq -r '.NetworkSettings.Networks."lan-integration-test_app".IPAddress')

        firezone-connection-tests
    depends_on:
      - redis
    networks:
      - app
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock

  redis:
    image: "redis:7-alpine"
    healthcheck:
      test: ["CMD-SHELL", "echo 'ready';"]
    networks:
      - app

networks:
  app:
   # enable_ipv6: true Disable until we find a workaround for https://github.com/moby/moby/issues/41438.
