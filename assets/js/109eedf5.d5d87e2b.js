"use strict";(self.webpackChunknew_docs=self.webpackChunknew_docs||[]).push([[4291],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>f});var n=r(7294);function o(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){o(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function l(e,t){if(null==e)return{};var r,n,o=function(e,t){if(null==e)return{};var r,n,o={},i=Object.keys(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||(o[r]=e[r]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)r=i[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(o[r]=e[r])}return o}var s=n.createContext({}),c=function(e){var t=n.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},p=function(e){var t=c(e.components);return n.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var r=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=c(r),f=o,m=d["".concat(s,".").concat(f)]||d[f]||u[f]||i;return r?n.createElement(m,a(a({ref:t},p),{},{components:r})):n.createElement(m,a({ref:t},p))}));function f(e,t){var r=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=r.length,a=new Array(i);a[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:o,a[1]=l;for(var c=2;c<i;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}d.displayName="MDXCreateElement"},7100:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var n=r(7462),o=(r(7294),r(3905));const i={title:"Traefik",sidebar_position:2},a=void 0,l={unversionedId:"deploy/reverse-proxies/traefik",id:"deploy/reverse-proxies/traefik",title:"Traefik",description:"The following are examples for configuring the Traefik",source:"@site/docs/deploy/reverse-proxies/traefik.md",sourceDirName:"deploy/reverse-proxies",slug:"/deploy/reverse-proxies/traefik",permalink:"/deploy/reverse-proxies/traefik",draft:!1,editUrl:"https://github.com/firezone/firezone/tree/master/docs/deploy/reverse-proxies/traefik.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Traefik",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Apache",permalink:"/deploy/reverse-proxies/apache"},next:{title:"HAProxy",permalink:"/deploy/reverse-proxies/haproxy"}},s={},c=[{value:"Without SSL termination",id:"without-ssl-termination",level:2},{value:"<code>docker-compose.yml</code>",id:"docker-composeyml",level:3},{value:"<code>rules.yml</code>",id:"rulesyml",level:3},{value:"With SSL termination",id:"with-ssl-termination",level:2},{value:"SSL <code>docker-compose.yml</code>",id:"ssl-docker-composeyml",level:3},{value:"SSL <code>rules.yml</code>",id:"ssl-rulesyml",level:3}],p={toc:c};function u(e){let{components:t,...r}=e;return(0,o.kt)("wrapper",(0,n.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("p",null,"The following are examples for configuring the ",(0,o.kt)("a",{parentName:"p",href:"https://traefik.io/"},"Traefik"),"\nproxy."),(0,o.kt)("p",null,"As of right now Firezone can't be run as a container in production, although\nthis is a ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/firezone/firezone/issues/260"},"planned feature"),".\nSo, these example configurations expects Firezone to be deployed on the same\nhost as the proxy."),(0,o.kt)("p",null,"In these configurations we assume ",(0,o.kt)("inlineCode",{parentName:"p"},"default['firezone']['phoenix']['port']")," to be\n",(0,o.kt)("inlineCode",{parentName:"p"},"13000"),". Furthermore, for these configuration to work we need the Firezone app\nto listen in the Docker interface so you should set:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"default['firezone']['phoenix']['listen_address'] = '172.17.0.1'")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"default['firezone']['external_trusted_proxies'] = ['172.18.0.2']"))),(0,o.kt)("p",null,"In the ",(0,o.kt)("a",{parentName:"p",href:"/reference/configuration-file"},"configuration file"),"."),(0,o.kt)("h2",{id:"without-ssl-termination"},"Without SSL termination"),(0,o.kt)("p",null,"Take into account that a previous proxy will need to terminate SSL connections."),(0,o.kt)("p",null,"Set the following files"),(0,o.kt)("h3",{id:"docker-composeyml"},(0,o.kt)("inlineCode",{parentName:"h3"},"docker-compose.yml")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-conf"},'ubuntu@ip-172-31-79-208:~/traefik$ cat docker-compose.yml\nversion: \'3\'\n\nservices:\n  reverse-proxy:\n          #network_mode: "host"\n    # The official v2 Traefik docker image\n    image: traefik:v2.8\n    # Enables the web UI and tells Traefik to listen to docker\n    command:\n    - "--providers.docker"\n    - "--providers.file.filename=rules.yml"\n    - "--entrypoints.web.address=:80"\n    - "--entrypoints.web.forwardedHeaders.insecure"\n    - "--log.level=DEBUG"\n    extra_hosts:\n    - "host.docker.internal:host-gateway"\n    ports:\n      # The HTTP port\n      - "80:80"\n    volumes:\n      # So that Traefik can listen to the Docker events\n      - /var/run/docker.sock:/var/run/docker.sock\n      - "./rules.yml:/rules.yml"\n')),(0,o.kt)("h3",{id:"rulesyml"},(0,o.kt)("inlineCode",{parentName:"h3"},"rules.yml")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-conf"},'ubuntu@ip-172-31-79-208:~/traefik$ cat rules.yml\nhttp:\n  routers:\n    test:\n      entryPoints:\n              - "web"\n      service: test\n      rule: "Host(`44.200.42.78`)"\n  services:\n    test:\n      loadBalancer:\n        servers:\n        - url: "http://host.docker.internal:13000"\n')),(0,o.kt)("p",null,"And then you can start the Traefik proxy with ",(0,o.kt)("inlineCode",{parentName:"p"},"docker compose up")),(0,o.kt)("h2",{id:"with-ssl-termination"},"With SSL termination"),(0,o.kt)("p",null,"This configuration use the auto-generated Firezone self-signed certs as the\ndefault certificates for SSL."),(0,o.kt)("h3",{id:"ssl-docker-composeyml"},"SSL ",(0,o.kt)("inlineCode",{parentName:"h3"},"docker-compose.yml")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-conf"},'version: \'3\'\n\nservices:\n  reverse-proxy:\n          #network_mode: "host"\n    # The official v2 Traefik docker image\n    image: traefik:v2.8\n    # Enables the web UI and tells Traefik to listen to docker\n    command:\n    - "--providers.docker"\n    - "--providers.file.filename=rules.yml"\n    - "--entrypoints.web.address=:443"\n    - "--entrypoints.web.forwardedHeaders.insecure"\n    - "--log.level=DEBUG"\n    extra_hosts:\n    - "host.docker.internal:host-gateway"\n    ports:\n      # The HTTP port\n      - "443:443"\n    volumes:\n      # So that Traefik can listen to the Docker events\n      - /var/run/docker.sock:/var/run/docker.sock\n      - "./rules.yml:/rules.yml"\n      - /var/opt/firezone/ssl/ca:/ssl:ro\n')),(0,o.kt)("h3",{id:"ssl-rulesyml"},"SSL ",(0,o.kt)("inlineCode",{parentName:"h3"},"rules.yml")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-conf"},'http:\n  routers:\n    test:\n      entryPoints:\n        - "web"\n      service: test\n      rule: "Host(`44.200.42.78`)"\n      tls: {}\n  services:\n    test:\n      loadBalancer:\n        servers:\n        - url: "http://host.docker.internal:13000"\ntls:\n  stores:\n    default:\n      defaultCertificate:\n        certFile: /ssl/ip-172-31-79-208.ec2.internal.crt\n        keyFile: /ssl/ip-172-31-79-208.ec2.internal.key\n')))}u.isMDXComponent=!0}}]);