"use strict";(self.webpackChunknew_docs=self.webpackChunknew_docs||[]).push([[3372],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>m});var i=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var c=i.createContext({}),s=function(e){var t=i.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return i.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,c=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=s(n),m=r,h=d["".concat(c,".").concat(m)]||d[m]||u[m]||a;return n?i.createElement(h,o(o({ref:t},p),{},{components:n})):i.createElement(h,o({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var s=2;s<a;s++)o[s]=n[s];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},4795:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>a,metadata:()=>l,toc:()=>s});var i=n(7462),r=(n(7294),n(3905));const a={title:"Azure Active Directory",sidebar_position:4},o=void 0,l={unversionedId:"authenticate/azuread",id:"authenticate/azuread",title:"Azure Active Directory",description:"Firezone supports Single Sign-On (SSO) using Azure Active Directory through the generic",source:"@site/docs/authenticate/azuread.md",sourceDirName:"authenticate",slug:"/authenticate/azuread",permalink:"/authenticate/azuread",draft:!1,editUrl:"https://github.com/firezone/firezone/tree/master/docs/authenticate/azuread.md",tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Azure Active Directory",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Okta",permalink:"/authenticate/okta"},next:{title:"Google",permalink:"/authenticate/google"}},c={},s=[{value:"Obtain Config Settings",id:"obtain-config-settings",level:2},{value:"Integrate With Firezone",id:"integrate-with-firezone",level:2},{value:"Restricting Access to Certain Members",id:"restricting-access-to-certain-members",level:2}],p={toc:s};function u(e){let{components:t,...n}=e;return(0,r.kt)("wrapper",(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("p",null,"Firezone supports Single Sign-On (SSO) using Azure Active Directory through the generic\nOIDC connector. This guide will walk you through how to obtain the following\nconfig settings required for the integration:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"discovery_document_uri"),": The\n",(0,r.kt)("a",{parentName:"li",href:"https://openid.net/specs/openid-connect-discovery-1_0.html#ProviderConfig"},"OpenID Connect provider configuration URI"),"\nwhich returns a JSON document used to construct subsequent requests to this\nOIDC provider."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"client_id"),": The client ID of the application."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"client_secret"),": The client secret of the application."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"redirect_uri"),": Instructs OIDC provider where to redirect after authentication.\nThis should be your Firezone ",(0,r.kt)("inlineCode",{parentName:"li"},"EXTERNAL_URL + /auth/oidc/<provider_key>/callback/"),"\n(e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"https://firezone.example.com/auth/oidc/azure/callback/"),")."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"response_type"),": Set to ",(0,r.kt)("inlineCode",{parentName:"li"},"code"),"."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"scope"),": ",(0,r.kt)("a",{parentName:"li",href:"https://openid.net/specs/openid-connect-basic-1_0.html#Scopes"},"OIDC scopes"),"\nto obtain from your OIDC provider. This should be set to ",(0,r.kt)("inlineCode",{parentName:"li"},"openid email profile offline_access"),"\nto provide Firezone with the user's email in the returned claims."),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"label"),": The button label text that shows up on your Firezone login screen.")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/52545545/168922621-1f0f4dea-adfc-4e15-a140-a2f213676103.gif",alt:"Azure SSO"})),(0,r.kt)("h2",{id:"obtain-config-settings"},"Obtain Config Settings"),(0,r.kt)("p",null,(0,r.kt)("em",{parentName:"p"},"This guide is adapted from the ",(0,r.kt)("a",{parentName:"em",href:"https://docs.microsoft.com/en-us/azure/active-directory/fundamentals/auth-oidc"},"Azure Active Directory documentation"),".")),(0,r.kt)("p",null,"Navigate to the Azure Active Directory page on the Azure portal.\nSelect the App registrations link under the Manage menu, click\n",(0,r.kt)("inlineCode",{parentName:"p"},"New Registration"),", and register after entering the following:"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"Name"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"Firezone")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"Supported account types"),": ",(0,r.kt)("inlineCode",{parentName:"li"},"(Default Directory only - Single tenant)")),(0,r.kt)("li",{parentName:"ol"},(0,r.kt)("inlineCode",{parentName:"li"},"Redirect URI"),": This should be your firezone ",(0,r.kt)("inlineCode",{parentName:"li"},"EXTERNAL_URL + /auth/oidc/azure/callback/"),"\n(e.g. ",(0,r.kt)("inlineCode",{parentName:"li"},"https://firezone.example.com/auth/oidc/azure/callback/"),").\nMake sure you include the trailing slash.\n",(0,r.kt)("strong",{parentName:"li"},"This will be the ",(0,r.kt)("inlineCode",{parentName:"strong"},"redirect_uri")," value"),".")),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/52545545/168722092-716c8448-4dc4-4d7a-a25c-1af701a57744.png",alt:"App Registration"})),(0,r.kt)("p",null,"After registering, open the details view of the application and copy the\n",(0,r.kt)("inlineCode",{parentName:"p"},"Application (client) ID"),". ",(0,r.kt)("strong",{parentName:"p"},"This will be the ",(0,r.kt)("inlineCode",{parentName:"strong"},"client_id")," value"),". Next, open\nthe endpoints menu to retrieve the ",(0,r.kt)("inlineCode",{parentName:"p"},"OpenID Connect metadata document"),".\n",(0,r.kt)("strong",{parentName:"p"},"This will be the ",(0,r.kt)("inlineCode",{parentName:"strong"},"discovery_document_uri")," value"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/52545545/168724099-100e4a9a-0bf6-42f6-b0ee-13a4c9a8da23.png",alt:"Azure Client ID"})),(0,r.kt)("p",null,"Next, select the Certificates & secrets link under the Manage menu and\ncreate a new client secret. Copy the client secret - ",(0,r.kt)("strong",{parentName:"p"},"this will be the\n",(0,r.kt)("inlineCode",{parentName:"strong"},"client_secret")," value"),"."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/52545545/168720697-1a28d2c1-4108-459c-9915-4397a4108818.png",alt:"Add a client secret"})),(0,r.kt)("p",null,"Lastly, select the API permissions link under the Manage menu,\nclick ",(0,r.kt)("inlineCode",{parentName:"p"},"Add a permission"),", and select ",(0,r.kt)("inlineCode",{parentName:"p"},"Microsoft Graph"),". Add ",(0,r.kt)("inlineCode",{parentName:"p"},"email"),", ",(0,r.kt)("inlineCode",{parentName:"p"},"openid"),",\n",(0,r.kt)("inlineCode",{parentName:"p"},"offline_access")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"profile")," to the required permissions."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/52545545/171556138-26de489b-7de5-4b53-91dc-dc8058f0f901.png",alt:"Permissions"})),(0,r.kt)("h2",{id:"integrate-with-firezone"},"Integrate With Firezone"),(0,r.kt)("p",null,"Edit ",(0,r.kt)("inlineCode",{parentName:"p"},"/etc/firezone/firezone.rb")," to include the options below."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-ruby"},'# Using Azure Active Directory as the SSO identity provider\ndefault[\'firezone\'][\'authentication\'][\'oidc\'] = {\n  azure: {\n    discovery_document_uri: "https://login.microsoftonline.com/<TENANT_ID>/v2.0/.well-known/openid-configuration",\n    client_id: "<CLIENT_ID>",\n    client_secret: "<CLIENT_SECRET>",\n    redirect_uri: "https://firezone.example.com/auth/oidc/azure/callback/",\n    response_type: "code",\n    scope: "openid email profile offline_access",\n    label: "Azure"\n  }\n}\n')),(0,r.kt)("p",null,"Run ",(0,r.kt)("inlineCode",{parentName:"p"},"firezone-ctl reconfigure")," to update the application.\nYou should now see a ",(0,r.kt)("inlineCode",{parentName:"p"},"Sign in with Azure")," button at the root Firezone URL."),(0,r.kt)("h2",{id:"restricting-access-to-certain-members"},"Restricting Access to Certain Members"),(0,r.kt)("p",null,"Azure AD allows admins to restrict app access to a subset of users within your\norganization. See Microsoft's\n",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/azure/active-directory/develop/howto-restrict-your-app-to-a-set-of-users"},"documentation"),"\nfor more information on how to do this."))}u.isMDXComponent=!0}}]);