"use strict";(self.webpackChunknew_docs=self.webpackChunknew_docs||[]).push([[5228],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>f});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=u(n),f=i,g=d["".concat(l,".").concat(f)]||d[f]||c[f]||o;return n?r.createElement(g,a(a({ref:t},p),{},{components:n})):r.createElement(g,a({ref:t},p))}));function f(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,a=new Array(o);a[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:i,a[1]=s;for(var u=2;u<o;u++)a[u]=n[u];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},3382:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>c,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var r=n(7462),i=(n(7294),n(3905));const o={title:"Split Tunnel VPN",sidebar_position:1},a=void 0,s={unversionedId:"user-guides/use-cases/split-tunnel",id:"user-guides/use-cases/split-tunnel",title:"Split Tunnel VPN",description:"This guide will describe the steps required to enable split tunneling with",source:"@site/docs/user-guides/use-cases/split-tunnel.md",sourceDirName:"user-guides/use-cases",slug:"/user-guides/use-cases/split-tunnel",permalink:"/user-guides/use-cases/split-tunnel",draft:!1,editUrl:"https://github.com/firezone/firezone/docs/user-guides/use-cases/split-tunnel.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{title:"Split Tunnel VPN",sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Common Use Cases",permalink:"/user-guides/use-cases/"},next:{title:"Reverse Tunnel",permalink:"/user-guides/use-cases/reverse-tunnel"}},l={},u=[{value:"Step 1 - Configure Allowed IPs",id:"step-1---configure-allowed-ips",level:2},{value:"Step 2 - Regenerate WireGuard configurations",id:"step-2---regenerate-wireguard-configurations",level:2}],p={toc:u};function c(e){let{components:t,...n}=e;return(0,i.kt)("wrapper",(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"This guide will describe the steps required to enable split tunneling with\nWireGuard using Firezone so only traffic to defined IP ranges will be routed\nthrough the VPN server."),(0,i.kt)("h2",{id:"step-1---configure-allowed-ips"},"Step 1 - Configure Allowed IPs"),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"Allowed IPs")," field found on the ",(0,i.kt)("inlineCode",{parentName:"p"},"/settings/default")," page determines the IP\nranges for which the client will route network traffic. Modifications to this\nfield will apply only to new WireGuard tunnel configurations generated by Firezone."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://user-images.githubusercontent.com/52545545/154814549-bb686ffe-ea82-4af8-a2a4-5e0b4013dec7.png",alt:"set split tunneling defaults"})),(0,i.kt)("p",null,"The default value is ",(0,i.kt)("inlineCode",{parentName:"p"},"0.0.0.0/0, ::/0"),", which routes all network traffic\nfrom the client to the VPN server."),(0,i.kt)("p",null,"Some examples of values in this field are:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"0.0.0.0/0, ::/0")," - all network traffic will be routed to the VPN server."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"192.0.2.3/32")," - only traffic to a single IP address\nwill be routed to the VPN server."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"3.5.140.0/22")," - only traffic to IPs in the ",(0,i.kt)("inlineCode",{parentName:"li"},"3.5.140.1 - 3.5.143.254")," range\nwill be routed to the VPN server.\nIn this example, the CIDR range for the ",(0,i.kt)("inlineCode",{parentName:"li"},"ap-northeast-2")," AWS region was used.")),(0,i.kt)("admonition",{type:"note"},(0,i.kt)("p",{parentName:"admonition"},"When deciding where to route a packet, Firezone chooses the egress\ninterface corresponding to the most specific route first.")),(0,i.kt)("h2",{id:"step-2---regenerate-wireguard-configurations"},"Step 2 - Regenerate WireGuard configurations"),(0,i.kt)("p",null,"To update existing user devices with the new split tunnel configuration,\nusers will need to regenerate the configuration files\nand add them to their native WireGuard client."),(0,i.kt)("p",null,"See ",(0,i.kt)("a",{parentName:"p",href:"../add-devices"},"add device")," for instructions."))}c.isMDXComponent=!0}}]);