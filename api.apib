# Firezone API
This is Firezone documentation.

# API Documentation


## Configuration [/v0/configuration]
### Get Configuration [GET /v0/configuration]


+ Request GET /v0/configuration
    + Headers
    
            Authorization: Bearer {api_token}

+ Response 200

    + Headers
    
            Content-Type: application/json; charset=utf-8
    + Body
    
            {
              "data": {
                "allow_unprivileged_device_configuration": true,
                "allow_unprivileged_device_management": true,
                "default_client_allowed_ips": "0.0.0.0/0,::/0",
                "default_client_dns": "1.1.1.1,1.0.0.1",
                "default_client_endpoint": "localhost:51820",
                "default_client_mtu": 1280,
                "default_client_persistent_keepalive": 25,
                "disable_vpn_on_oidc_error": false,
                "id": "f23dc476-d737-4497-b97c-9ecefb1944c6",
                "inserted_at": "2023-01-11T19:25:35.350867Z",
                "local_auth_enabled": true,
                "logo": null,
                "openid_connect_providers": [],
                "saml_identity_providers": [],
                "updated_at": "2023-01-11T19:25:35.350867Z",
                "vpn_session_duration": 0
              }
            }
### Update Configuration [PUT /v0/configuration]


+ Request PUT /v0/configuration
    + Headers
    
            Authorization: Bearer {api_token}
    + Body
    
            {
              "configuration": {
                "allow_unprivileged_device_configuration": false,
                "allow_unprivileged_device_management": false,
                "default_client_allowed_ips": "1.1.1.1,2.2.2.2",
                "default_client_dns": "1.1.1.1",
                "default_client_endpoint": "new-endpoint",
                "default_client_mtu": 1100,
                "default_client_persistent_keepalive": 1,
                "disable_vpn_on_oidc_error": true,
                "local_auth_enabled": false,
                "openid_connect_providers": [
                  {
                    "auto_create_users": false,
                    "client_id": "test-id",
                    "client_secret": "test-secret",
                    "discovery_document_uri": "https://accounts.google.com/.well-known/openid-configuration",
                    "id": "google",
                    "label": "google",
                    "redirect_uri": "https://invalid",
                    "response_type": "response-type",
                    "scope": "test-scope"
                  }
                ],
                "saml_identity_providers": [
                  {
                    "auto_create_users": false,
                    "base_url": "https://saml",
                    "id": "okta",
                    "label": "okta",
                    "metadata": "<?xml version=\"1.0\"?>\n<md:EntityDescriptor xmlns=\"urn:oasis:names:tc:SAML:2.0:metadata\" xmlns:md=\"urn:oasis:names:tc:SAML:2.0:metadata\" xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\" xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\" entityID=\"http://localhost:8080/realms/firezone\">\n  <md:IDPSSODescriptor WantAuthnRequestsSigned=\"true\" protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\">\n    <md:KeyDescriptor use=\"signing\">\n      <ds:KeyInfo>\n        <ds:KeyName>pdSMtx2s3RVVhxg_qJOjHhlZhwZk6JiBMiSm5PEgjkA</ds:KeyName>\n        <ds:X509Data>\n          <ds:X509Certificate>MIICnzCCAYcCBgGD18ZU8TANBgkqhkiG9w0BAQsFADATMREwDwYDVQQDDAhmaXJlem9uZTAeFw0yMjEwMTQxODMyMjJaFw0zMjEwMTQxODM0MDJaMBMxETAPBgNVBAMMCGZpcmV6b25lMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAur5Cb0jrDJbMwr96WWE+z9CjDg0A/uRkaB4loRqkmu3A2fQGsS6CP7F7lQWMJmpzvBgkNtB69toO2sgx1u1fhpIJBZ0uSHF5gnzQAivgVxInvkMKRTRSkpMbhObiDHZnEGI2+Ly+8iV8IvprdrbDgm52u4conam0H1PewUKkHulrVQ+ImFuEWAjKCRSqpUG2F1eRkA0YpqB09x0CZAOOoucwTsBYj/ZAz3dUXhYIENAF7v0ykvzGOCAyOZIn1uYQc7jvWpwoI8qQdL45phj2FLoFlght3tlZV8IG5hsXrE6rg7Ufqvv8xyGltrOMKj/jEFEunagZOUjkypDp36b8cwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBEZKLLr66GB3NxqXGTMl0PvTDNB9GdyShQHaJYjeeUQnEXixjlAVrOq/txEBKjhGUcqyFELoNuwcxxV1iHA5oXhCoqYmnp9T/ftmXPDT3c49PBABHgLJaFOKYTpVx1YjP7mA44X1ijLZmgboIeeFNerVNHIzR9BsxcloQlB0r9QfC14rsuXo6QD3QnaVI8wDgWXQHqpcwLFqvehXdNvMFniRvX2qBNU8E0FPoMaZ1C3n2nssLcVZ+C4ghq6YoAG+wLGY7XE8+v5rnYGDpGpfgr2wdefn6tryFq3PyGqA8ThjARESRRQG9kI/RlNX7qCnP/8/7JQ4wLdfz5C25uhakP</ds:X509Certificate>\n        </ds:X509Data>\n      </ds:KeyInfo>\n    </md:KeyDescriptor>\n    <md:ArtifactResolutionService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:SOAP\" Location=\"http://localhost:8080/realms/firezone/protocol/saml/resolve\" index=\"0\"/>\n    <md:SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"http://localhost:8080/realms/firezone/protocol/saml\"/>\n    <md:SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"http://localhost:8080/realms/firezone/protocol/saml\"/>\n    <md:SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact\" Location=\"http://localhost:8080/realms/firezone/protocol/saml\"/>\n    <md:NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</md:NameIDFormat>\n    <md:NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</md:NameIDFormat>\n    <md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</md:NameIDFormat>\n    <md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</md:NameIDFormat>\n    <md:SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"http://localhost:8080/realms/firezone/protocol/saml\"/>\n    <md:SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"http://localhost:8080/realms/firezone/protocol/saml\"/>\n    <md:SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:SOAP\" Location=\"http://localhost:8080/realms/firezone/protocol/saml\"/>\n    <md:SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact\" Location=\"http://localhost:8080/realms/firezone/protocol/saml\"/>\n  </md:IDPSSODescriptor>\n</md:EntityDescriptor>\n",
                    "sign_metadata": false,
                    "sign_requests": false,
                    "signed_assertion_in_resp": false,
                    "signed_envelopes_in_resp": false
                  }
                ],
                "vpn_session_duration": 100
              }
            }

+ Response 200

    + Headers
    
            Content-Type: application/json; charset=utf-8
    + Body
    
            {
              "data": {
                "allow_unprivileged_device_configuration": false,
                "allow_unprivileged_device_management": false,
                "default_client_allowed_ips": "1.1.1.1,2.2.2.2",
                "default_client_dns": "1.1.1.1",
                "default_client_endpoint": "new-endpoint",
                "default_client_mtu": 1100,
                "default_client_persistent_keepalive": 1,
                "disable_vpn_on_oidc_error": true,
                "id": "f23dc476-d737-4497-b97c-9ecefb1944c6",
                "inserted_at": "2023-01-11T19:25:35.350867Z",
                "local_auth_enabled": false,
                "logo": null,
                "openid_connect_providers": [
                  {
                    "auto_create_users": false,
                    "client_id": "test-id",
                    "client_secret": "test-secret",
                    "discovery_document_uri": "https://accounts.google.com/.well-known/openid-configuration",
                    "id": "google",
                    "label": "google",
                    "redirect_uri": "https://invalid",
                    "response_type": "response-type",
                    "scope": "test-scope"
                  }
                ],
                "saml_identity_providers": [
                  {
                    "auto_create_users": false,
                    "base_url": "https://saml",
                    "id": "okta",
                    "label": "okta",
                    "metadata": "<?xml version=\"1.0\"?>\n<md:EntityDescriptor xmlns=\"urn:oasis:names:tc:SAML:2.0:metadata\" xmlns:md=\"urn:oasis:names:tc:SAML:2.0:metadata\" xmlns:saml=\"urn:oasis:names:tc:SAML:2.0:assertion\" xmlns:ds=\"http://www.w3.org/2000/09/xmldsig#\" entityID=\"http://localhost:8080/realms/firezone\">\n  <md:IDPSSODescriptor WantAuthnRequestsSigned=\"true\" protocolSupportEnumeration=\"urn:oasis:names:tc:SAML:2.0:protocol\">\n    <md:KeyDescriptor use=\"signing\">\n      <ds:KeyInfo>\n        <ds:KeyName>pdSMtx2s3RVVhxg_qJOjHhlZhwZk6JiBMiSm5PEgjkA</ds:KeyName>\n        <ds:X509Data>\n          <ds:X509Certificate>MIICnzCCAYcCBgGD18ZU8TANBgkqhkiG9w0BAQsFADATMREwDwYDVQQDDAhmaXJlem9uZTAeFw0yMjEwMTQxODMyMjJaFw0zMjEwMTQxODM0MDJaMBMxETAPBgNVBAMMCGZpcmV6b25lMIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEAur5Cb0jrDJbMwr96WWE+z9CjDg0A/uRkaB4loRqkmu3A2fQGsS6CP7F7lQWMJmpzvBgkNtB69toO2sgx1u1fhpIJBZ0uSHF5gnzQAivgVxInvkMKRTRSkpMbhObiDHZnEGI2+Ly+8iV8IvprdrbDgm52u4conam0H1PewUKkHulrVQ+ImFuEWAjKCRSqpUG2F1eRkA0YpqB09x0CZAOOoucwTsBYj/ZAz3dUXhYIENAF7v0ykvzGOCAyOZIn1uYQc7jvWpwoI8qQdL45phj2FLoFlght3tlZV8IG5hsXrE6rg7Ufqvv8xyGltrOMKj/jEFEunagZOUjkypDp36b8cwIDAQABMA0GCSqGSIb3DQEBCwUAA4IBAQBEZKLLr66GB3NxqXGTMl0PvTDNB9GdyShQHaJYjeeUQnEXixjlAVrOq/txEBKjhGUcqyFELoNuwcxxV1iHA5oXhCoqYmnp9T/ftmXPDT3c49PBABHgLJaFOKYTpVx1YjP7mA44X1ijLZmgboIeeFNerVNHIzR9BsxcloQlB0r9QfC14rsuXo6QD3QnaVI8wDgWXQHqpcwLFqvehXdNvMFniRvX2qBNU8E0FPoMaZ1C3n2nssLcVZ+C4ghq6YoAG+wLGY7XE8+v5rnYGDpGpfgr2wdefn6tryFq3PyGqA8ThjARESRRQG9kI/RlNX7qCnP/8/7JQ4wLdfz5C25uhakP</ds:X509Certificate>\n        </ds:X509Data>\n      </ds:KeyInfo>\n    </md:KeyDescriptor>\n    <md:ArtifactResolutionService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:SOAP\" Location=\"http://localhost:8080/realms/firezone/protocol/saml/resolve\" index=\"0\"/>\n    <md:SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"http://localhost:8080/realms/firezone/protocol/saml\"/>\n    <md:SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"http://localhost:8080/realms/firezone/protocol/saml\"/>\n    <md:SingleLogoutService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact\" Location=\"http://localhost:8080/realms/firezone/protocol/saml\"/>\n    <md:NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:persistent</md:NameIDFormat>\n    <md:NameIDFormat>urn:oasis:names:tc:SAML:2.0:nameid-format:transient</md:NameIDFormat>\n    <md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:unspecified</md:NameIDFormat>\n    <md:NameIDFormat>urn:oasis:names:tc:SAML:1.1:nameid-format:emailAddress</md:NameIDFormat>\n    <md:SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-POST\" Location=\"http://localhost:8080/realms/firezone/protocol/saml\"/>\n    <md:SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Redirect\" Location=\"http://localhost:8080/realms/firezone/protocol/saml\"/>\n    <md:SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:SOAP\" Location=\"http://localhost:8080/realms/firezone/protocol/saml\"/>\n    <md:SingleSignOnService Binding=\"urn:oasis:names:tc:SAML:2.0:bindings:HTTP-Artifact\" Location=\"http://localhost:8080/realms/firezone/protocol/saml\"/>\n  </md:IDPSSODescriptor>\n</md:EntityDescriptor>\n",
                    "sign_metadata": false,
                    "sign_requests": false,
                    "signed_assertion_in_resp": false,
                    "signed_envelopes_in_resp": false
                  }
                ],
                "updated_at": "2023-01-12T00:31:39.621697Z",
                "vpn_session_duration": 100
              }
            }

## Devices [/v0/devices/ac4ea85f-077e-4172-98b8-a89c6c23466f]

REST API Controller for Devices.

### Get Device by ID [GET /v0/devices/{id}]

+ Parameters
    + id: `ac4ea85f-077e-4172-98b8-a89c6c23466f`


+ Request GET /v0/devices/{id}
    + Headers
    
            Authorization: Bearer {api_token}

+ Response 200

    + Headers
    
            Content-Type: application/json; charset=utf-8
    + Body
    
            {
              "data": {
                "allowed_ips": "0.0.0.0/0,::/0",
                "description": "factory description",
                "dns": "1.1.1.1,1.0.0.1",
                "endpoint": "localhost:51820",
                "id": "ac4ea85f-077e-4172-98b8-a89c6c23466f",
                "inserted_at": "2023-01-12T00:31:38.689647Z",
                "ipv4": "100.68.219.88",
                "ipv6": "fd00::1ccc",
                "latest_handshake": null,
                "mtu": 1280,
                "name": "factory 196",
                "persistent_keepalive": 25,
                "preshared_key": "8hW74AzIxb6/dRFRjXwFwDB/d7BVfMt3lxBqHpNniBc=",
                "public_key": "OF9oWYi949QPYAjfOYfQ5W+EFTdbIA3IPeZFQgO98+c=",
                "remote_ip": null,
                "rx_bytes": null,
                "server_public_key": null,
                "tx_bytes": null,
                "updated_at": "2023-01-12T00:31:38.689647Z",
                "use_default_allowed_ips": true,
                "use_default_dns": true,
                "use_default_endpoint": true,
                "use_default_mtu": true,
                "use_default_persistent_keepalive": true,
                "user_id": "139aad9a-2130-4a09-a5e2-59645cbf0fab"
              }
            }
### Create a Device [POST /v0/devices]


+ Request POST /v0/devices
    + Headers
    
            Authorization: Bearer {api_token}
    + Body
    
            {
              "device": {
                "allowed_ips": "0.0.0.0/0, ::/0, 1.1.1.1",
                "description": "create-description",
                "dns": "9.9.9.8",
                "endpoint": "9.9.9.9",
                "ipv4": "100.64.0.2",
                "ipv6": "fd00::2",
                "mtu": 999,
                "name": "create-name",
                "persistent_keepalive": 9,
                "preshared_key": "CHqFuS+iL3FTog5F4Ceumqlk0CU4Cl/dyUP/9F9NDnI=",
                "public_key": "CHqFuS+iL3FTog5F4Ceumqlk0CU4Cl/dyUP/9F9NDnI=",
                "use_default_allowed_ips": false,
                "use_default_dns": false,
                "use_default_endpoint": false,
                "use_default_mtu": false,
                "use_default_persistent_keepalive": false,
                "user_id": "c42f1e19-c59b-4f53-a330-26f2779905c1"
              }
            }

+ Response 201

    + Headers
    
            Content-Type: application/json; charset=utf-8
            Location: /v0/devices/4ef585de-93d7-4548-bf3c-c38bd53ec8d9
    + Body
    
            {
              "data": {
                "allowed_ips": "0.0.0.0/0, ::/0, 1.1.1.1",
                "description": "create-description",
                "dns": "9.9.9.8",
                "endpoint": "9.9.9.9",
                "id": "4ef585de-93d7-4548-bf3c-c38bd53ec8d9",
                "inserted_at": "2023-01-12T00:31:38.994344Z",
                "ipv4": "100.64.0.2",
                "ipv6": "fd00::2",
                "latest_handshake": null,
                "mtu": 999,
                "name": "create-name",
                "persistent_keepalive": 9,
                "preshared_key": "CHqFuS+iL3FTog5F4Ceumqlk0CU4Cl/dyUP/9F9NDnI=",
                "public_key": "CHqFuS+iL3FTog5F4Ceumqlk0CU4Cl/dyUP/9F9NDnI=",
                "remote_ip": null,
                "rx_bytes": null,
                "server_public_key": null,
                "tx_bytes": null,
                "updated_at": "2023-01-12T00:31:38.994344Z",
                "use_default_allowed_ips": false,
                "use_default_dns": false,
                "use_default_endpoint": false,
                "use_default_mtu": false,
                "use_default_persistent_keepalive": false,
                "user_id": "c42f1e19-c59b-4f53-a330-26f2779905c1"
              }
            }
### Update a Device [PUT /v0/devices/{id}]

+ Parameters
    + id: `c1b51f19-b76f-417c-9683-f6c873ca508d`


+ Request PUT /v0/devices/{id}
    + Headers
    
            Authorization: Bearer {api_token}
    + Body
    
            {
              "device": {
                "allowed_ips": "0.0.0.0/0, ::/0, 1.1.1.1",
                "description": "create-description",
                "dns": "9.9.9.8",
                "endpoint": "9.9.9.9",
                "ipv4": "100.64.0.2",
                "ipv6": "fd00::2",
                "mtu": 999,
                "name": "create-name",
                "persistent_keepalive": 9,
                "preshared_key": "CHqFuS+iL3FTog5F4Ceumqlk0CU4Cl/dyUP/9F9NDnI=",
                "public_key": "CHqFuS+iL3FTog5F4Ceumqlk0CU4Cl/dyUP/9F9NDnI=",
                "use_default_allowed_ips": false,
                "use_default_dns": false,
                "use_default_endpoint": false,
                "use_default_mtu": false,
                "use_default_persistent_keepalive": false
              }
            }

+ Response 200

    + Headers
    
            Content-Type: application/json; charset=utf-8
    + Body
    
            {
              "data": {
                "allowed_ips": "0.0.0.0/0, ::/0, 1.1.1.1",
                "description": "create-description",
                "dns": "9.9.9.8",
                "endpoint": "9.9.9.9",
                "id": "c1b51f19-b76f-417c-9683-f6c873ca508d",
                "inserted_at": "2023-01-12T00:31:38.773784Z",
                "ipv4": "100.64.0.2",
                "ipv6": "fd00::2",
                "latest_handshake": null,
                "mtu": 999,
                "name": "create-name",
                "persistent_keepalive": 9,
                "preshared_key": "CHqFuS+iL3FTog5F4Ceumqlk0CU4Cl/dyUP/9F9NDnI=",
                "public_key": "CHqFuS+iL3FTog5F4Ceumqlk0CU4Cl/dyUP/9F9NDnI=",
                "remote_ip": null,
                "rx_bytes": null,
                "server_public_key": null,
                "tx_bytes": null,
                "updated_at": "2023-01-12T00:31:38.805627Z",
                "use_default_allowed_ips": false,
                "use_default_dns": false,
                "use_default_endpoint": false,
                "use_default_mtu": false,
                "use_default_persistent_keepalive": false,
                "user_id": "6ff89f20-b879-4609-bf35-d54703da5228"
              }
            }
### List all Devices [GET /v0/devices]


+ Request GET /v0/devices
    + Headers
    
            Authorization: Bearer {api_token}

+ Response 200

    + Headers
    
            Content-Type: application/json; charset=utf-8
    + Body
    
            {
              "data": [
                {
                  "allowed_ips": "0.0.0.0/0,::/0",
                  "description": "factory description",
                  "dns": "1.1.1.1,1.0.0.1",
                  "endpoint": "localhost:51820",
                  "id": "ad49b7a2-0a0f-4936-ae27-9b46f57a88fe",
                  "inserted_at": "2023-01-12T00:31:38.825740Z",
                  "ipv4": "100.124.68.41",
                  "ipv6": "fd00::26:4a39",
                  "latest_handshake": null,
                  "mtu": 1280,
                  "name": "factory 617",
                  "persistent_keepalive": 25,
                  "preshared_key": "QEyCUUP92o7pceo03sUtav/ChUjwO2uACJUwN7GOIIQ=",
                  "public_key": "i/ea/70P+K9CJ1hPUrlB/TxKr09zFLSE7N7QEdrArUk=",
                  "remote_ip": null,
                  "rx_bytes": null,
                  "server_public_key": null,
                  "tx_bytes": null,
                  "updated_at": "2023-01-12T00:31:38.825740Z",
                  "use_default_allowed_ips": true,
                  "use_default_dns": true,
                  "use_default_endpoint": true,
                  "use_default_mtu": true,
                  "use_default_persistent_keepalive": true,
                  "user_id": "5c58b386-746f-4216-b5fb-748cd39c5009"
                },
                {
                  "allowed_ips": "0.0.0.0/0,::/0",
                  "description": "factory description",
                  "dns": "1.1.1.1,1.0.0.1",
                  "endpoint": "localhost:51820",
                  "id": "84017a6b-306c-44d1-885f-c9e259a93da3",
                  "inserted_at": "2023-01-12T00:31:38.835593Z",
                  "ipv4": "100.94.241.122",
                  "ipv6": "fd00::24:457f",
                  "latest_handshake": null,
                  "mtu": 1280,
                  "name": "factory 3458",
                  "persistent_keepalive": 25,
                  "preshared_key": "EXRaK7aT0hK0eZqPmZhtpiywicQPwCz1kfWdiyJhTbg=",
                  "public_key": "YAK+nMjGdgVSEilKmlRvL0Fm5OdhS19sxER2WDY4J+0=",
                  "remote_ip": null,
                  "rx_bytes": null,
                  "server_public_key": null,
                  "tx_bytes": null,
                  "updated_at": "2023-01-12T00:31:38.835593Z",
                  "use_default_allowed_ips": true,
                  "use_default_dns": true,
                  "use_default_endpoint": true,
                  "use_default_mtu": true,
                  "use_default_persistent_keepalive": true,
                  "user_id": "10da0087-cb8a-4c01-be7c-2ade738b4195"
                },
                {
                  "allowed_ips": "0.0.0.0/0,::/0",
                  "description": "factory description",
                  "dns": "1.1.1.1,1.0.0.1",
                  "endpoint": "localhost:51820",
                  "id": "50b255a3-8519-4a4e-943f-337228796045",
                  "inserted_at": "2023-01-12T00:31:38.843437Z",
                  "ipv4": "100.105.207.153",
                  "ipv6": "fd00::31:7e95",
                  "latest_handshake": null,
                  "mtu": 1280,
                  "name": "factory 3522",
                  "persistent_keepalive": 25,
                  "preshared_key": "H/3hSmU1nDkwkXUk51tC/TZYey+DDCepsVYxTia5cKc=",
                  "public_key": "qOFiUTuFc62+lIOADLD1TaXGhQFDWO3/n/z3JhSHOYA=",
                  "remote_ip": null,
                  "rx_bytes": null,
                  "server_public_key": null,
                  "tx_bytes": null,
                  "updated_at": "2023-01-12T00:31:38.843437Z",
                  "use_default_allowed_ips": true,
                  "use_default_dns": true,
                  "use_default_endpoint": true,
                  "use_default_mtu": true,
                  "use_default_persistent_keepalive": true,
                  "user_id": "9d665068-b4e1-4a9d-9594-d225ca0685a4"
                },
                {
                  "allowed_ips": "0.0.0.0/0,::/0",
                  "description": "factory description",
                  "dns": "1.1.1.1,1.0.0.1",
                  "endpoint": "localhost:51820",
                  "id": "cf398337-98f2-41a0-ba84-f9f586668f99",
                  "inserted_at": "2023-01-12T00:31:38.850695Z",
                  "ipv4": "100.100.13.182",
                  "ipv6": "fd00::21:b156",
                  "latest_handshake": null,
                  "mtu": 1280,
                  "name": "factory 292",
                  "persistent_keepalive": 25,
                  "preshared_key": "wgvItuA2XCCcI/6vLlso7Xxn+SO8x/EmsAIVn0q6Sc0=",
                  "public_key": "qrFJxI2usUMMr+KEMnZ3TRL3eQUxjehSGe0WAfJJAEQ=",
                  "remote_ip": null,
                  "rx_bytes": null,
                  "server_public_key": null,
                  "tx_bytes": null,
                  "updated_at": "2023-01-12T00:31:38.850695Z",
                  "use_default_allowed_ips": true,
                  "use_default_dns": true,
                  "use_default_endpoint": true,
                  "use_default_mtu": true,
                  "use_default_persistent_keepalive": true,
                  "user_id": "0c5ec8d1-de93-4ac9-a229-b05f6cc9fd98"
                },
                {
                  "allowed_ips": "0.0.0.0/0,::/0",
                  "description": "factory description",
                  "dns": "1.1.1.1,1.0.0.1",
                  "endpoint": "localhost:51820",
                  "id": "cc1cf853-a957-401e-a5ba-00aa0456aa40",
                  "inserted_at": "2023-01-12T00:31:38.857906Z",
                  "ipv4": "100.83.192.26",
                  "ipv6": "fd00::3d:89e3",
                  "latest_handshake": null,
                  "mtu": 1280,
                  "name": "factory 294",
                  "persistent_keepalive": 25,
                  "preshared_key": "Jctc9GfD/wm/q3cNu6tsjlveKRZTwUYjn1qpjdq/ars=",
                  "public_key": "FeEwe95777q5WCLYOuhRfbplPakyxwCaOrlL1GOHob4=",
                  "remote_ip": null,
                  "rx_bytes": null,
                  "server_public_key": null,
                  "tx_bytes": null,
                  "updated_at": "2023-01-12T00:31:38.857906Z",
                  "use_default_allowed_ips": true,
                  "use_default_dns": true,
                  "use_default_endpoint": true,
                  "use_default_mtu": true,
                  "use_default_persistent_keepalive": true,
                  "user_id": "32d2d19d-b552-4d7f-bc59-83f13fde0dea"
                }
              ]
            }
### Delete a Device [DELETE /v0/devices/{id}]

+ Parameters
    + id: `a4337b3d-b718-45ac-aaed-9c48bfd765a8`


+ Request DELETE /v0/devices/{id}
    + Headers
    
            Authorization: Bearer {api_token}

+ Response 204

    + Body
    
            

## Rules [/v0/rules/d1fe2462-f8e7-4807-ba1a-d46ee500929e]

REST API Controller for Rules.

### Get Rule by ID [GET /v0/rules/{id}]

+ Parameters
    + id: `d1fe2462-f8e7-4807-ba1a-d46ee500929e`


+ Request GET /v0/rules/{id}
    + Headers
    
            Authorization: Bearer {api_token}

+ Response 200

    + Headers
    
            Content-Type: application/json; charset=utf-8
    + Body
    
            {
              "data": {
                "action": "drop",
                "destination": "10.10.10.0/24",
                "id": "d1fe2462-f8e7-4807-ba1a-d46ee500929e",
                "inserted_at": "2023-01-12T00:31:38.739333Z",
                "port_range": null,
                "port_type": null,
                "updated_at": "2023-01-12T00:31:38.739333Z",
                "user_id": null
              }
            }
### Create a Rule [POST /v0/rules]


+ Request POST /v0/rules
    + Headers
    
            Authorization: Bearer {api_token}
    + Body
    
            {
              "rule": {
                "action": "accept",
                "destination": "1.1.1.1/24",
                "port_range": "1 - 2",
                "port_type": "udp",
                "user_id": "7fa31977-e7a6-48f4-8f3f-c0e31ff489c3"
              }
            }

+ Response 201

    + Headers
    
            Content-Type: application/json; charset=utf-8
            Location: /v0/rules/9642f17b-42f6-4d57-a15f-a36f9515374f
    + Body
    
            {
              "data": {
                "action": "accept",
                "destination": "1.1.1.1/24",
                "id": "9642f17b-42f6-4d57-a15f-a36f9515374f",
                "inserted_at": "2023-01-12T00:31:38.918706Z",
                "port_range": "1 - 2",
                "port_type": "udp",
                "updated_at": "2023-01-12T00:31:38.918706Z",
                "user_id": "7fa31977-e7a6-48f4-8f3f-c0e31ff489c3"
              }
            }
### Update a Rule [PUT /v0/rules/{id}]

+ Parameters
    + id: `8049ae81-c535-44c7-b768-f66a371a9d42`


+ Request PUT /v0/rules/{id}
    + Headers
    
            Authorization: Bearer {api_token}
    + Body
    
            {
              "rule": {
                "action": "accept",
                "destination": "1.1.1.1/24",
                "port_range": "1 - 2",
                "port_type": "udp"
              }
            }

+ Response 200

    + Headers
    
            Content-Type: application/json; charset=utf-8
    + Body
    
            {
              "data": {
                "action": "accept",
                "destination": "1.1.1.1/24",
                "id": "8049ae81-c535-44c7-b768-f66a371a9d42",
                "inserted_at": "2023-01-12T00:31:38.778465Z",
                "port_range": "1 - 2",
                "port_type": "udp",
                "updated_at": "2023-01-12T00:31:38.805892Z",
                "user_id": null
              }
            }
### List all Rules [GET /v0/rules]


+ Request GET /v0/rules
    + Headers
    
            Authorization: Bearer {api_token}

+ Response 200

    + Headers
    
            Content-Type: application/json; charset=utf-8
    + Body
    
            {
              "data": [
                {
                  "action": "drop",
                  "destination": "10.3.2.1",
                  "id": "1b37d9d7-2887-446f-8536-85414a739378",
                  "inserted_at": "2023-01-12T00:31:38.922541Z",
                  "port_range": null,
                  "port_type": null,
                  "updated_at": "2023-01-12T00:31:38.922541Z",
                  "user_id": null
                },
                {
                  "action": "drop",
                  "destination": "10.3.2.2",
                  "id": "14b690d6-8484-4cd3-9911-20d680047455",
                  "inserted_at": "2023-01-12T00:31:38.926010Z",
                  "port_range": null,
                  "port_type": null,
                  "updated_at": "2023-01-12T00:31:38.926010Z",
                  "user_id": null
                },
                {
                  "action": "drop",
                  "destination": "10.3.2.3",
                  "id": "20d44128-b8be-4a29-8de9-1c2a7d109685",
                  "inserted_at": "2023-01-12T00:31:38.926743Z",
                  "port_range": null,
                  "port_type": null,
                  "updated_at": "2023-01-12T00:31:38.926743Z",
                  "user_id": null
                },
                {
                  "action": "drop",
                  "destination": "10.3.2.4",
                  "id": "1f3b33ee-afe6-405f-b9f2-1e7f442a49b6",
                  "inserted_at": "2023-01-12T00:31:38.927723Z",
                  "port_range": null,
                  "port_type": null,
                  "updated_at": "2023-01-12T00:31:38.927723Z",
                  "user_id": null
                },
                {
                  "action": "drop",
                  "destination": "10.3.2.5",
                  "id": "8eb33c87-828f-4e8e-b94a-44d9a91fd1d2",
                  "inserted_at": "2023-01-12T00:31:38.928684Z",
                  "port_range": null,
                  "port_type": null,
                  "updated_at": "2023-01-12T00:31:38.928684Z",
                  "user_id": null
                }
              ]
            }
### Delete a Rule [DELETE /v0/rules/{id}]

+ Parameters
    + id: `aaa0baba-78f1-4bb0-a332-cc0bca821c58`


+ Request DELETE /v0/rules/{id}
    + Headers
    
            Authorization: Bearer {api_token}

+ Response 204

    + Body
    
            

## Users [/v0/users]

This endpoint allows you to provision Users.

*Auto-Create Users from OpenID or SAML providers*

You can set Configuration option `auto_create_users` to `true` to automatically create users
from OpenID or SAML providers. Use it with care as anyone with access to the provider will be
able to log-in to Firezone.

If `auto_create_users` is `false`, then you need to provision users with `password` attribute,
otherwise they will have no means to log in.

### List All Users [GET /v0/users]


+ Request GET /v0/users
    + Headers
    
            Authorization: Bearer {api_token}

+ Response 200

    + Headers
    
            Content-Type: application/json; charset=utf-8
    + Body
    
            {
              "data": [
                {
                  "disabled_at": null,
                  "email": "test-265@test",
                  "id": "8192e49b-9a1c-47e7-b735-551c2014cf59",
                  "inserted_at": "2023-01-12T00:31:38.744550Z",
                  "last_signed_in_at": null,
                  "last_signed_in_method": null,
                  "role": "admin",
                  "updated_at": "2023-01-12T00:31:38.744550Z"
                },
                {
                  "disabled_at": null,
                  "email": "test-933@test",
                  "id": "c9c0bccb-e0a3-4174-9804-92529407b272",
                  "inserted_at": "2023-01-12T00:31:38.748103Z",
                  "last_signed_in_at": null,
                  "last_signed_in_method": null,
                  "role": "admin",
                  "updated_at": "2023-01-12T00:31:38.748103Z"
                },
                {
                  "disabled_at": null,
                  "email": "test-200@test",
                  "id": "00054894-f69a-4289-b386-98a5bcc260f5",
                  "inserted_at": "2023-01-12T00:31:38.750646Z",
                  "last_signed_in_at": null,
                  "last_signed_in_method": null,
                  "role": "admin",
                  "updated_at": "2023-01-12T00:31:38.750646Z"
                },
                {
                  "disabled_at": null,
                  "email": "test-232@test",
                  "id": "fdad81ab-e6e6-48a7-a506-d2b35cdafca0",
                  "inserted_at": "2023-01-12T00:31:38.753510Z",
                  "last_signed_in_at": null,
                  "last_signed_in_method": null,
                  "role": "admin",
                  "updated_at": "2023-01-12T00:31:38.753510Z"
                }
              ]
            }
### Create a User [POST /v0/users]

Please see `Auto-Create Users from OpenID or SAML providers` for more details
on `password` field usage.



+ Request Provision an admin OpenID User
    + Headers
    
            Authorization: Bearer {api_token}
    
    + Attributes (object)
    
        + user (object, required)
            + role: `admin` (enum, optional) - User role.
                - `admin` (string)
                - `unprivileged` (string)
            + email: `foo@example.com` (string, optional) - Email which will be used to identify the user.
            + password: `FOO123bar123` (string, optional) - A password that can be used for login-password authentication. It can be empty if you want to pre-create a user that will use OpenID to authenticate.
            + password_confirmation: `FOO123bar123` (string, optional) - Password confirmation is required when `password` is set.


    + Body
    
            {
              "user": {
                "email": "new-user@test",
                "role": "admin"
              }
            }

+ Response 201

    + Headers
    
            Content-Type: application/json; charset=utf-8
            Location: /v0/users/76383ecd-45b7-42f8-8aeb-9f08f8060657
    + Body
    
            {
              "data": {
                "disabled_at": null,
                "email": "new-user@test",
                "id": "76383ecd-45b7-42f8-8aeb-9f08f8060657",
                "inserted_at": "2023-01-12T00:31:39.012786Z",
                "last_signed_in_at": null,
                "last_signed_in_method": null,
                "role": "admin",
                "updated_at": "2023-01-12T00:31:39.012786Z"
              }
            }


+ Request Provision an unprivileged OpenID User
    + Headers
    
            Authorization: Bearer {api_token}
    
    + Attributes (object)
    
        + user (object, required)
            + role: `admin` (enum, optional) - User role.
                - `admin` (string)
                - `unprivileged` (string)
            + email: `foo@example.com` (string, optional) - Email which will be used to identify the user.
            + password: `FOO123bar123` (string, optional) - A password that can be used for login-password authentication. It can be empty if you want to pre-create a user that will use OpenID to authenticate.
            + password_confirmation: `FOO123bar123` (string, optional) - Password confirmation is required when `password` is set.


    + Body
    
            {
              "user": {
                "email": "new-user@test",
                "role": "unprivileged"
              }
            }

+ Response 201

    + Headers
    
            Content-Type: application/json; charset=utf-8
            Location: /v0/users/f177c9c3-0577-4f24-88ed-6b6907a52baa
    + Body
    
            {
              "data": {
                "disabled_at": null,
                "email": "new-user@test",
                "id": "f177c9c3-0577-4f24-88ed-6b6907a52baa",
                "inserted_at": "2023-01-12T00:31:39.097594Z",
                "last_signed_in_at": null,
                "last_signed_in_method": null,
                "role": "unprivileged",
                "updated_at": "2023-01-12T00:31:39.097594Z"
              }
            }


+ Request POST /v0/users
    + Headers
    
            Authorization: Bearer {api_token}
    
    + Attributes (object)
    
        + user (object, required)
            + role: `admin` (enum, optional) - User role.
                - `admin` (string)
                - `unprivileged` (string)
            + email: `foo@example.com` (string, optional) - Email which will be used to identify the user.
            + password: `FOO123bar123` (string, optional) - A password that can be used for login-password authentication. It can be empty if you want to pre-create a user that will use OpenID to authenticate.
            + password_confirmation: `FOO123bar123` (string, optional) - Password confirmation is required when `password` is set.


    + Body
    
            {
              "user": {
                "email": "new-user@test",
                "password": "test1234test",
                "password_confirmation": "test1234test",
                "role": "unprivileged"
              }
            }

+ Response 201

    + Headers
    
            Content-Type: application/json; charset=utf-8
            Location: /v0/users/193394ad-a42e-44aa-90e1-ae5961986005
    + Body
    
            {
              "data": {
                "disabled_at": null,
                "email": "new-user@test",
                "id": "193394ad-a42e-44aa-90e1-ae5961986005",
                "inserted_at": "2023-01-12T00:31:38.901064Z",
                "last_signed_in_at": null,
                "last_signed_in_method": null,
                "role": "unprivileged",
                "updated_at": "2023-01-12T00:31:38.901064Z"
              }
            }


+ Request Error due to invalid parameters
    + Headers
    
            Authorization: Bearer {api_token}
    
    + Attributes (object)
    
        + user (object, required)
            + role: `admin` (enum, optional) - User role.
                - `admin` (string)
                - `unprivileged` (string)
            + email: `foo@example.com` (string, optional) - Email which will be used to identify the user.
            + password: `FOO123bar123` (string, optional) - A password that can be used for login-password authentication. It can be empty if you want to pre-create a user that will use OpenID to authenticate.
            + password_confirmation: `FOO123bar123` (string, optional) - Password confirmation is required when `password` is set.


    + Body
    
            {
              "user": {
                "email": "test@test.com",
                "password": "test1234"
              }
            }

+ Response 422

    + Headers
    
            Content-Type: application/json; charset=utf-8
    + Body
    
            {
              "errors": {
                "password": [
                  "should be at least 12 character(s)",
                  "does not match password confirmation."
                ]
              }
            }
### Update a User [PUT /v0/users/{id}]

Please see `Auto-Create Users from OpenID or SAML providers` for more details
on `password` field usage.


+ Parameters
    + id: `68f0289a-ea2e-4f18-8f6d-e9974e3b33f0`


+ Request Update by ID
    + Headers
    
            Authorization: Bearer {api_token}
    
    + Attributes (object)
    
        + user (object, required)
            + role: `admin` (enum, optional) - User role.
                - `admin` (string)
                - `unprivileged` (string)
            + email: `foo@example.com` (string, optional) - Email which will be used to identify the user.
            + password: `FOO123bar123` (string, optional) - A password that can be used for login-password authentication. It can be empty if you want to pre-create a user that will use OpenID to authenticate.
            + password_confirmation: `FOO123bar123` (string, optional) - Password confirmation is required when `password` is set.


    + Body
    
            {
              "user": {}
            }

+ Response 200

    + Headers
    
            Content-Type: application/json; charset=utf-8
    + Body
    
            {
              "data": {
                "disabled_at": null,
                "email": "test-1350@test",
                "id": "68f0289a-ea2e-4f18-8f6d-e9974e3b33f0",
                "inserted_at": "2023-01-12T00:31:39.124742Z",
                "last_signed_in_at": null,
                "last_signed_in_method": null,
                "role": "unprivileged",
                "updated_at": "2023-01-12T00:31:39.124742Z"
              }
            }


+ Request Update by email
    + Headers
    
            Authorization: Bearer {api_token}
    
    + Attributes (object)
    
        + user (object, required)
            + role: `admin` (enum, optional) - User role.
                - `admin` (string)
                - `unprivileged` (string)
            + email: `foo@example.com` (string, optional) - Email which will be used to identify the user.
            + password: `FOO123bar123` (string, optional) - A password that can be used for login-password authentication. It can be empty if you want to pre-create a user that will use OpenID to authenticate.
            + password_confirmation: `FOO123bar123` (string, optional) - Password confirmation is required when `password` is set.


    + Body
    
            {
              "user": {}
            }

+ Response 200

    + Headers
    
            Content-Type: application/json; charset=utf-8
    + Body
    
            {
              "data": {
                "disabled_at": null,
                "email": "test-1446@test",
                "id": "763c0b9a-0b0d-4232-93f8-011171fc4801",
                "inserted_at": "2023-01-12T00:31:39.140182Z",
                "last_signed_in_at": null,
                "last_signed_in_method": null,
                "role": "unprivileged",
                "updated_at": "2023-01-12T00:31:39.140182Z"
              }
            }
### Get User by ID or Email [GET /v0/users/test-1542%40test]

+ Parameters
    + id: `test-1542@test`


+ Request GET /v0/users/{email}
An email can be used instead of ID.

    + Headers
    
            Authorization: Bearer {api_token}

+ Response 200

    + Headers
    
            Content-Type: application/json; charset=utf-8
    + Body
    
            {
              "data": {
                "disabled_at": null,
                "email": "test-1542@test",
                "id": "2f7eacf5-7c34-4b2e-9fc1-22131c5e7b31",
                "inserted_at": "2023-01-12T00:31:39.156052Z",
                "last_signed_in_at": null,
                "last_signed_in_method": null,
                "role": "admin",
                "updated_at": "2023-01-12T00:31:39.156052Z"
              }
            }


+ Request GET /v0/users/{id}
    + Headers
    
            Authorization: Bearer {api_token}

+ Response 200

    + Headers
    
            Content-Type: application/json; charset=utf-8
    + Body
    
            {
              "data": {
                "disabled_at": null,
                "email": "test-1157@test",
                "id": "2bb6183e-de5d-4401-995b-bc29caf0ff89",
                "inserted_at": "2023-01-12T00:31:38.831008Z",
                "last_signed_in_at": null,
                "last_signed_in_method": null,
                "role": "admin",
                "updated_at": "2023-01-12T00:31:38.831008Z"
              }
            }
### Delete a User [DELETE /v0/users/test-3874%40test]

+ Parameters
    + id: `test-3874@test`


+ Request DELETE /v0/users/{email}
An email can be used instead of ID.

    + Headers
    
            Authorization: Bearer {api_token}

+ Response 204

    + Body
    
            


+ Request DELETE /v0/users/{id}
    + Headers
    
            Authorization: Bearer {api_token}

+ Response 204

    + Body
    
            

