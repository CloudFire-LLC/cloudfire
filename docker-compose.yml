version: '3.7'

services:
  caddy:
    image: caddy:2
    networks:
      - firezone_dev
    volumes:
      - ./.devcontainer/Caddyfile:/etc/caddy/Caddyfile
    ports:
      - 80:80
      - 443:443

  elixir:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        DATABASE_URL: postgresql://postgres:postgres@postgres:5432/firezone_dev
    image: firezone_dev
    volumes:
      - ./priv:/var/app/priv
      - ./apps:/var/app/apps
      - ./config:/var/app/config
      - ./mix.exs:/var/app/mix.exs
      - ./mix.lock:/var/app/mix.lock
    ports:
      - 51820:51820/udp
    networks:
      - firezone_dev
    environment:
      LOCAL_AUTH_ENABLED: 'true'
      FZ_WALL_CLI_MODULE: FzWall.CLI.Live
      FZ_VPN_WGADAPTER_MODULE: FzVpn.Interface.WGAdapter.Live
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv6.conf.all.forwarding=1
    depends_on:
      - postgres

  postgres:
    image: postgres:13.5
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - firezone_dev
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: firezone_dev
    # ports:
    #   - 5432:5432

  wireguard:
    image: ubuntu:jammy
    volumes:
      - /sys/kernel/debug:/sys/kernel/debug
    privileged: true
    command: bash -c 'dmesg -wT | grep wireguard:'
    networks:
      - firezone_dev

volumes:
  postgres-data:

networks:
  firezone_dev:
    ipam:
      driver: default
      config:
        - subnet: "172.28.0.0/16"
